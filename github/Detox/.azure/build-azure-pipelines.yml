variables:
  Feed.Name: ht-topenland/ht-topenland
  IS_CLOUD_BUILD: $[ eq(variables['POOL_NAME'], 'Azure Pipelines')]
  GRADLE_USER_HOME: $(Pipeline.Workspace)/.gradle

pool:
  name: $(POOL_NAME)
  vmImage: 'macOS-11'

# trigger: none
trigger:
- feature/azure-pipelines
- feature/ci-build-*
- feature/upgrade-*
# - release/*

stages:

- stage: setup
  jobs:
  - job: setup
    steps:
    - checkout: none
    # - script: env

- stage: sandbox
  dependsOn: setup
  condition: and(
    succeeded(),
    or(
      eq(variables['FORCE_BUILD'], 'sandbox'),
      startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/azure-pipelines'),
      startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/ci-build'),
      startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/upgrade'),
      and(
        or(
          startsWith(variables['Build.SourceBranch'], 'refs/heads/develop'),
          eq(variables['system.pullRequest.targetBranch'], 'refs/heads/develop')
        ),
        or(
          eq(variables['Build.Reason'], 'IndividualCI'),
          eq(variables['Build.Reason'], 'Schedule'),
          eq(variables['Build.Reason'], 'PullRequest')
        )
      )
    ))
  jobs:
  - job: setup
    steps:
    - checkout: none

- stage: sandbox_android
  dependsOn: sandbox
  pool:
    name: $(POOL_NAME)
    vmImage: 'macOS-11'
    demands:
    - AgentAndroid -equals True
  jobs:
  - job: sandbox_android
    steps:
    - template: ./android-steps.yml
    - script: |
        set -e
        yarn env:sandboxcitus
        scripts/replace-version.sh packagejson `scripts/parse-version-azure.sh $BUILD_BUILDNUMBER`
        scripts/changelog.sh
        scripts/android-enable-screenshot.sh
        yarn release:android
        echo "##vso[task.logissue type=warning]`du -hs android/app/build/outputs/apk/release/app-release.apk`"
      displayName: build_android
    - template: ./tag-steps.yml
      parameters:
        customTagName: "android/$BUILD_BUILDID-$(du -hs android/app/build/outputs/apk/release/app-release.apk | awk '{print $1}')"

- stage: sandbox_ios
  dependsOn: sandbox
  pool:
    name: $(POOL_NAME)
    vmImage: 'macOS-11'
    demands:
    - AgentIOS -equals True
  jobs:
  - job: sandbox_ios
    timeoutInMinutes: 90
    steps:
    - template: ./ios-setup-steps.yml
    - script: |
        set -e
        yarn env:sandboxcitus
        scripts/replace-version.sh packagejson `scripts/parse-version-azure.sh $BUILD_BUILDNUMBER`
        scripts/changelog.sh
        yarn release:ios
        echo "##vso[task.logissue type=warning]`du -hs ios/build/DevTopenland.ipa`"
      displayName: build_ios
    - template: ./tag-steps.yml
      parameters:
        customTagName: "ios/$BUILD_BUILDID-$(du -hs ios/build/DevTopenland.ipa | awk '{print $1}')"

- stage: sandbox_post
  dependsOn:
  - sandbox_android
  - sandbox_ios
  jobs:
  - job: tag_build_number
    steps:
    - task: DownloadSecureFile@1
      name: Download_cert
      inputs:
        secureFile: testkey
    - script: |
        cp $(Agent.TempDirectory)/testkey ~/.ssh/id_rsa
        chmod 700 ~/.ssh
        chmod 400 ~/.ssh/id_rsa
      condition: eq(variables['IS_CLOUD_BUILD'], 'true')
      displayName: setup_ssh
    - template: ./tag-steps.yml
      parameters:
        customTagName: "sandbox/v$(scripts/parse-version-azure.sh $BUILD_BUILDNUMBER)"
    - script: echo "##vso[build.updatebuildnumber]sandbox-`scripts/parse-version-azure.sh $BUILD_BUILDNUMBER`"

- stage: qa
  dependsOn: setup
  condition: and(
    succeeded(),
    or(
      startsWith(variables['Build.SourceBranch'], 'refs/heads/release/qa'),
      startsWith(variables['system.pullRequest.targetBranch'], 'refs/heads/release/qa'),
      eq(variables['system.pullRequest.targetBranch'], 'refs/heads/master'),
      eq(variables['FORCE_BUILD'], 'qa')
    ))
  jobs:
  - job: setup
    steps:
    - script: |
        set -ex
        git apply patch/add-firebase-perf.diff
        scripts/android-enable-screenshot.sh
      displayName: test_git_apply

- stage: qa_android
  dependsOn: qa
  pool:
    name: $(POOL_NAME)
    vmImage: 'macOS-11'
    demands:
    - AgentAndroid -equals True
  jobs:
  - job: qa_android
    steps:
    - template: ./android-steps.yml
    - script: git apply patch/add-firebase-perf.diff && yarn install
      displayName: add_firebase_perf
    - script: |
        set -e
        yarn env:qa
        # scripts/replace-version.sh packagejson `scripts/version.sh`
        scripts/changelog.sh
        scripts/android-enable-screenshot.sh
        yarn release:android
      displayName: build_android

- stage: qa_ios
  dependsOn: qa
  pool:
    name: $(POOL_NAME)
    vmImage: 'macOS-11'
    demands:
    - AgentIOS -equals True
  jobs:
  - job: qa_ios
    timeoutInMinutes: 90
    steps:
    - template: ./ios-setup-steps.yml
    - script: git apply patch/add-firebase-perf.diff && yarn install:ios
      displayName: add_firebase_perf
    - script: |
        set -e
        yarn env:qa
        # scripts/replace-version.sh packagejson `scripts/version.sh`
        scripts/changelog.sh
        yarn release:ios
      displayName: build_ios

- stage: qa_ios_testflight
  dependsOn:
  - qa_android
  - qa_ios
  pool:
    name: $(POOL_NAME)
    vmImage: 'macOS-11'
    demands:
    - AgentIOS -equals True
  jobs:
  - job: qa_ios_testflight
    timeoutInMinutes: 90
    steps:
    - template: ./ios-setup-steps.yml
    - script: git apply patch/add-firebase-perf.diff && yarn install:ios
      displayName: add_firebase_perf
    - script: |
        set -e
        yarn env:qa
        # scripts/replace-version.sh packagejson `scripts/version.sh`
        export FL_DISTRIBUTE_GROUP="App Store Connect Users"
        yarn release:ios:testflight
      displayName: build_ios_testflight
    - template: ./tag-steps.yml
      parameters:
        customTagName: "v$(scripts/version.sh)"
    - script: echo "##vso[build.updatebuildnumber]qa-`scripts/version.sh`"

- stage: uat
  dependsOn: setup
  condition: and(
    succeeded(),
    or(
      eq(variables['FORCE_BUILD'], 'uat'),
      startsWith(variables['Build.SourceBranch'], 'refs/heads/release/uat'),
      startsWith(variables['system.pullRequest.targetBranch'], 'refs/heads/release/uat')
    ))
  jobs:
  - job: setup
    steps:
    - script: |
        set -ex
        git apply patch/add-firebase-perf.diff
        scripts/android-enable-screenshot.sh
      displayName: test_git_apply

- stage: uat_android
  dependsOn: uat
  pool:
    name: $(POOL_NAME)
    vmImage: 'macOS-11'
    demands:
    - AgentAndroid -equals True
  jobs:
  - job: uat_android
    steps:
    - template: ./android-steps.yml
    - script: git apply patch/add-firebase-perf.diff && yarn install
      displayName: add_firebase_perf
    - script: |
        set -e
        yarn env:uat
        # scripts/replace-version.sh packagejson `scripts/version.sh`
        scripts/changelog.sh
        scripts/android-enable-screenshot.sh
        bundle exec fastlane android clean
        yarn release:android
      displayName: build_android

- stage: uat_ios
  dependsOn: uat
  pool:
    name: $(POOL_NAME)
    vmImage: 'macOS-11'
    demands:
    - AgentIOS -equals True
  jobs:
  - job: uat_ios
    timeoutInMinutes: 90
    steps:
    - template: ./ios-setup-steps.yml
    - script: git apply patch/add-firebase-perf.diff && yarn install:ios
      displayName: add_firebase_perf
    - script: |
        set -e
        yarn env:uat
        # scripts/replace-version.sh packagejson `scripts/version.sh`
        scripts/changelog.sh
        export GYM_CLEAN=true
        yarn release:ios
      displayName: build_ios

- stage: uat_ios_testflight
  dependsOn:
  - uat_android
  - uat_ios
  pool:
    name: $(POOL_NAME)
    vmImage: 'macOS-11'
    demands:
    - AgentIOS -equals True
  jobs:
  - job: uat_ios_testflight
    timeoutInMinutes: 90
    steps:
    - template: ./ios-setup-steps.yml
    - script: git apply patch/add-firebase-perf.diff && yarn install:ios
      displayName: add_firebase_perf
    - script: |
        set -e
        yarn env:uat
        # scripts/replace-version.sh packagejson `scripts/version.sh`
        export GYM_CLEAN=true
        export FL_DISTRIBUTE_GROUP="App Store Connect Users"
        yarn release:ios:testflight
      displayName: build_ios_testflight
    - template: ./tag-steps.yml
      parameters:
        customTagName: "v$(scripts/version.sh)-uat"
    - script: echo "##vso[build.updatebuildnumber]uat-`scripts/version.sh`"

- stage: stg
  dependsOn: setup
  condition: and(
    succeeded(),
    or(
      startsWith(variables['Build.SourceBranch'], 'refs/heads/release/stg'),
      eq(variables['FORCE_BUILD'], 'stg')
    ))
  jobs:
  - job: setup
    steps:
    - script: |
        set -ex
        git apply patch/add-firebase-perf.diff
        scripts/android-enable-screenshot.sh
      displayName: test_git_apply

- stage: stg_android
  dependsOn: stg
  pool:
    name: $(POOL_NAME)
    vmImage: 'macOS-11'
    demands:
    - AgentAndroid -equals True
  jobs:
  - job: stg_android
    steps:
    - template: ./android-steps.yml
    - script: git apply patch/add-firebase-perf.diff && yarn install
      displayName: add_firebase_perf
    - script: |
        set -e
        yarn env:stg
        # scripts/replace-version.sh packagejson `scripts/version.sh`
        scripts/changelog.sh
        scripts/android-enable-screenshot.sh
        bundle exec fastlane android clean
        yarn release:android
      displayName: build_android

- stage: stg_ios
  dependsOn: stg
  pool:
    name: $(POOL_NAME)
    vmImage: 'macOS-11'
    demands:
    - AgentIOS -equals True
  jobs:
  - job: stg_ios
    timeoutInMinutes: 90
    steps:
    - template: ./ios-setup-steps.yml
    - script: git apply patch/add-firebase-perf.diff && yarn install:ios
      displayName: add_firebase_perf
    - script: |
        set -e
        yarn env:stg
        # scripts/replace-version.sh packagejson `scripts/version.sh`
        scripts/changelog.sh
        export GYM_CLEAN=true
        yarn release:ios
      displayName: build_ios

- stage: stg_ios_testflight
  dependsOn:
  - stg_android
  - stg_ios
  pool:
    name: $(POOL_NAME)
    vmImage: 'macOS-11'
    demands:
    - AgentIOS -equals True
  jobs:
  - job: stg_ios_testflight
    timeoutInMinutes: 90
    steps:
    - template: ./ios-setup-steps.yml
    - script: git apply patch/add-firebase-perf.diff && yarn install:ios
      displayName: add_firebase_perf
    - script: |
        set -e
        yarn env:stg
        # scripts/replace-version.sh packagejson `scripts/version.sh`
        export GYM_CLEAN=true
        export FL_DISTRIBUTE_GROUP="App Store Connect Users"
        yarn release:ios:testflight
      displayName: build_ios_testflight
    - template: ./tag-steps.yml
      parameters:
        customTagName: "v$(scripts/version.sh)-stg"
    - script: echo "##vso[build.updatebuildnumber]stg-`scripts/version.sh`"

- stage: prod
  dependsOn: setup
  condition: and(
    succeeded(),
    or(
      eq(variables['FORCE_BUILD'], 'prod'),
      startsWith(variables['Build.SourceBranch'], 'refs/heads/release/prod'),
      startsWith(variables['system.pullRequest.targetBranch'], 'refs/heads/release/prod'),
      eq(variables['system.pullRequest.targetBranch'], 'refs/heads/production')
    ))
  jobs:
  - job: setup
    steps:
    - checkout: none

- stage: prod_android
  dependsOn: prod
  pool:
    name: $(POOL_NAME)
    vmImage: 'macOS-11'
    demands:
    - AgentAndroid -equals True
  jobs:
  - job: prod_android
    steps:
    - template: ./android-steps.yml
    - script: git apply patch/add-firebase-perf.diff && yarn install
      displayName: add_firebase_perf
    - script: |
        set -e
        yarn env:prod
        # scripts/replace-version.sh packagejson `scripts/version.sh`
        scripts/config-tpf-sdk-prod.sh && yarn install
        scripts/changelog.sh
        bundle exec fastlane android clean
        yarn release:android
      displayName: build_android

- stage: prod_ios
  dependsOn: prod
  pool:
    name: $(POOL_NAME)
    vmImage: 'macOS-11'
    demands:
    - AgentIOS -equals True
  jobs:
  - job: prod_ios
    timeoutInMinutes: 90
    steps:
    - template: ./ios-setup-steps.yml
    - script: git apply patch/add-firebase-perf.diff && yarn install:ios
      displayName: add_firebase_perf
    - script: |
        set -e
        yarn env:prod
        # scripts/replace-version.sh packagejson `scripts/version.sh`
        scripts/changelog.sh
        scripts/config-tpf-sdk-prod.sh && yarn install:ios
        export GYM_CLEAN=true
        yarn release:ios
      displayName: build_ios
    - template: ./tag-steps.yml
      parameters:
        customTagName: "v$(scripts/version.sh)-prod"
    - script: echo "##vso[build.updatebuildnumber]prod-`scripts/version.sh`"

- stage: store
  dependsOn:
  - prod_android
  - prod_ios
  jobs:
  - deployment:
    displayName: store
    environment: mobile-env
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: none

- stage: store_android
  dependsOn: store
  pool:
    name: $(POOL_NAME)
    vmImage: 'macOS-11'
    demands:
    - AgentAndroid -equals True
  jobs:
  - job: store_android
    steps:
    - template: ./android-steps.yml
    - script: git apply patch/add-firebase-perf.diff && yarn install
      displayName: add_firebase_perf
    - script: |
        set -e
        yarn env:store
        # scripts/replace-version.sh packagejson `scripts/version.sh`
        scripts/config-tpf-sdk-prod.sh && yarn install
        export FL_DISTRIBUTE_GROUP=Beta
        bundle exec fastlane android clean
        yarn release:android
      displayName: build_android

- stage: store_ios
  dependsOn: store
  pool:
    name: $(POOL_NAME)
    vmImage: 'macOS-11'
    demands:
    - AgentIOS -equals True
  jobs:
  - job: store_ios
    timeoutInMinutes: 90
    steps:
    - template: ./ios-setup-steps.yml
    - script: git apply patch/add-firebase-perf.diff && yarn install:ios
      displayName: add_firebase_perf
    - script: |
        set -e
        yarn env:store
        # scripts/replace-version.sh packagejson `scripts/version.sh`
        scripts/config-tpf-sdk-prod.sh && yarn install:ios
        export GYM_CLEAN=true
        export FL_DISTRIBUTE_GROUP="Beta"
        yarn release:ios:testflight
      displayName: build_ios
