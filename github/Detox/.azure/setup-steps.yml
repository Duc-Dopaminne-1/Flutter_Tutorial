steps:
  - script: |
      xcodebuild -version
      sudo xcode-select --switch /Applications/Xcode_13.0.app/Contents/Developer
      xcodebuild -version
    condition: eq(variables['IS_CLOUD_BUILD'], 'true')
    displayName: 'select_xcode_13.0'

  - task: NodeTool@0
    inputs:
      versionSpec: '14.17.1'
    condition: eq(variables['IS_CLOUD_BUILD'], 'true')
    displayName: 'select_node_14.17.1'

  - script: |
      npm i -g yarn
      npm i -g conventional-changelog-cli
    condition: eq(variables['IS_CLOUD_BUILD'], 'true')
    displayName: pre_install

  - script: bundle install
    displayName: bundle_install

  - task: Cache@2
    inputs:
      key: '"$(CACHE_VERSION)" | yarn | "$(Agent.OS)" | "yarn.lock"'
      restoreKeys: |
        "$(CACHE_VERSION)" | yarn | "$(Agent.OS)"
        "$(CACHE_VERSION)" | yarn
      path: node_modules
    displayName: yarn_cache
    condition: eq(variables['IS_CLOUD_BUILD'], 'true')

  - script: yarn --frozen-lockfile
    displayName: yarn_install

  - script: |
      # npm i -g envinfo && envinfo
      npx react-native info
    displayName: env_info

  - task: DownloadSecureFile@1
    name: Download_cert
    inputs:
      secureFile: testkey

  - script: |
      cp $(Agent.TempDirectory)/testkey ~/.ssh/id_rsa
      chmod 700 ~/.ssh
      chmod 400 ~/.ssh/id_rsa
    condition: eq(variables['IS_CLOUD_BUILD'], 'true')
    displayName: setup_ssh
