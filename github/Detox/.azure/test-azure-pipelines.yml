variables:
  IS_CLOUD_BUILD: $[ eq(variables['POOL_NAME'], 'Azure Pipelines')]

pool:
  name: $(POOL_NAME)
  vmImage: 'macOS-11'

trigger:
- feature/azure-pipelines
- feature/ci-test
- feature/upgrade-*

jobs:
  - job: unit_test
    steps:
      - template: ./setup-steps.yml

      - script: yarn lint .
        displayName: lint

      - script: yarn lint:localize
        displayName: lint_localize

      - script: yarn prettier . --check
        displayName: prettier

      - script: |
          yarn env:dev
          yarn test --ci --reporters=jest-junit --reporters=default --coverage --coverageReporters=cobertura --coverageReporters=lcov --verbose
        displayName: test

      - task: PublishTestResults@2
        inputs:
          testResultsFiles: junit.xml
          mergeTestResults: true
          failTaskOnFailedTests: true

      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: build/test/coverage/cobertura-coverage.xml
          failIfCoverageEmpty: true

      - script: |
          export CURRENT_VERSION=`grep '"version"' package.json | grep -o "\d*\.\d*\.\d*"`
          export NEXT_VERSION=$BUILD_BUILDNUMBER.$BUILD_BUILDID
          sed -i "" "s/$CURRENT_VERSION/$NEXT_VERSION/g" package.json
        displayName: pre_sonar
        condition: and(succeeded(), eq(variables['ENABLE_SONAR'], 'true'))

      - script: |
          grep '"version"' package.json
          yarn sonar
        displayName: sonar
        condition: and(
          succeeded(),
          not(startsWith(variables['system.pullRequest.sourceBranch'], 'refs/heads/tma')),
          eq(variables['ENABLE_SONAR'], 'true'))

      - script: |
          grep '"version"' package.json
          sed -i '' 's/mobile-sb/mobile.tma/g' sonar-project.js
          yarn sonar
        displayName: sonar_tma
        condition: and(
          succeeded(),
          startsWith(variables['system.pullRequest.sourceBranch'], 'refs/heads/tma'),
          eq(variables['ENABLE_SONAR'], 'true'))

      - script: yarn graphql-gen
        displayName: graphql_gen
        condition: or(
          startsWith(variables['Build.SourceBranch'], 'refs/heads/feature'),
          startsWith(variables['system.pullRequest.targetBranch'], 'refs/heads/develop'))
